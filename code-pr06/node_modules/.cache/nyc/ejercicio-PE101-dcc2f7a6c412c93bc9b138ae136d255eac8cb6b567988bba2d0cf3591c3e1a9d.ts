"use strict";/* eslint-disable valid-jsdoc */ /* eslint-disable require-jsdoc */ /* eslint-disable max-len */function cov_106lgrxepf(){var path="/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-Pablo400/code-pr06/src/ejercicio-PE101.ts";var hash="d42ebef9bc414c57a37ff1284bb8dd345e7a584d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-Pablo400/code-pr06/src/ejercicio-PE101.ts",statementMap:{"0":{start:{line:5,column:0},end:{line:5,column:62}},"1":{start:{line:6,column:0},end:{line:6,column:115}},"2":{start:{line:13,column:8},end:{line:13,column:27}},"3":{start:{line:21,column:8},end:{line:21,column:30}},"4":{start:{line:22,column:8},end:{line:22,column:26}},"5":{start:{line:30,column:8},end:{line:30,column:33}},"6":{start:{line:38,column:8},end:{line:38,column:32}},"7":{start:{line:39,column:8},end:{line:39,column:26}},"8":{start:{line:46,column:8},end:{line:46,column:33}},"9":{start:{line:49,column:0},end:{line:49,column:52}},"10":{start:{line:56,column:8},end:{line:56,column:21}},"11":{start:{line:64,column:23},end:{line:64,column:25}},"12":{start:{line:65,column:8},end:{line:69,column:9}},"13":{start:{line:65,column:21},end:{line:65,column:22}},"14":{start:{line:66,column:12},end:{line:68,column:13}},"15":{start:{line:67,column:16},end:{line:67,column:40}},"16":{start:{line:70,column:8},end:{line:70,column:22}},"17":{start:{line:73,column:0},end:{line:73,column:68}},"18":{start:{line:76,column:8},end:{line:76,column:21}},"19":{start:{line:84,column:23},end:{line:84,column:25}},"20":{start:{line:85,column:8},end:{line:89,column:9}},"21":{start:{line:85,column:21},end:{line:85,column:22}},"22":{start:{line:86,column:12},end:{line:88,column:13}},"23":{start:{line:87,column:16},end:{line:87,column:40}},"24":{start:{line:90,column:8},end:{line:90,column:22}},"25":{start:{line:93,column:0},end:{line:93,column:66}},"26":{start:{line:94,column:26},end:{line:94,column:75}},"27":{start:{line:95,column:25},end:{line:95,column:83}},"28":{start:{line:100,column:0},end:{line:100,column:45}},"29":{start:{line:101,column:0},end:{line:101,column:41}},"30":{start:{line:102,column:0},end:{line:102,column:44}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:23},end:{line:14,column:5}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:4},end:{line:20,column:5}},loc:{start:{line:20,column:18},end:{line:23,column:5}},line:20},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:4},end:{line:29,column:5}},loc:{start:{line:29,column:19},end:{line:31,column:5}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:22},end:{line:40,column:5}},line:37},"4":{name:"(anonymous_4)",decl:{start:{line:45,column:4},end:{line:45,column:5}},loc:{start:{line:45,column:23},end:{line:47,column:5}},line:45},"5":{name:"(anonymous_5)",decl:{start:{line:55,column:4},end:{line:55,column:5}},loc:{start:{line:55,column:23},end:{line:57,column:5}},line:55},"6":{name:"(anonymous_6)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:23},end:{line:71,column:5}},line:63},"7":{name:"(anonymous_7)",decl:{start:{line:75,column:4},end:{line:75,column:5}},loc:{start:{line:75,column:23},end:{line:77,column:5}},line:75},"8":{name:"(anonymous_8)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:23},end:{line:91,column:5}},line:83}},branchMap:{"0":{loc:{start:{line:66,column:12},end:{line:68,column:13}},type:"if",locations:[{start:{line:66,column:12},end:{line:68,column:13}},{start:{line:66,column:12},end:{line:68,column:13}}],line:66},"1":{loc:{start:{line:86,column:12},end:{line:88,column:13}},type:"if",locations:[{start:{line:86,column:12},end:{line:88,column:13}},{start:{line:86,column:12},end:{line:88,column:13}}],line:86}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-Pablo400/code-pr06/src/ejercicio-PE101.ts",sources:["/home/usuario/ull-esit-inf-dsi-21-22-prct06-generics-solid-Pablo400/code-pr06/src/ejercicio-PE101.ts"],names:[],mappings:";AAAA,gCAAgC;AAChC,kCAAkC;AAClC,4BAA4B;;;AAa5B,MAAsB,oBAAoB;IACxC;;;OAGG;IACH,YAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAAI,CAAC;IAEpC;;;;OAIG;IACH,OAAO,CAAC,IAAO;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,OAAO,CAAC,KAAc;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAc;QACvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;CAGF;AA7CD,oDA6CC;AAED,MAAa,4BAA6B,SAAQ,oBAA4B;IAC5E;;;OAGG;IACH,YAAY,KAAgB;QAC1B,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,UAAkB;QACvB,MAAM,MAAM,GAAc,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;gBAClC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzB;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAvBD,oEAuBC;AAED,MAAa,2BAA4B,SAAQ,oBAA4B;IAC3E,YAAY,KAAgB;QAC1B,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,UAAkB;QACvB,MAAM,MAAM,GAAc,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACjD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzB;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAnBD,kEAmBC;AAED,MAAM,iBAAiB,GAAG,IAAI,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5E,MAAM,gBAAgB,GAAG,IAAI,2BAA2B,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AAEpF,6CAA6C;AAC7C,6CAA6C;AAE7C,iDAAiD;AACjD,4CAA4C;AAC5C,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAE7C,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC",sourcesContent:["/* eslint-disable valid-jsdoc */\n/* eslint-disable require-jsdoc */\n/* eslint-disable max-len */\n\ninterface Collectable<T> {\n  addItem(item : T) : void;\n  getItem(item : number) : T;\n  removeItem(index : number) : T[];\n  getNumberOfItems() : number;\n}\n\ninterface Searchable<T> {\n  search(searchTerm : T) : T[] | undefined;\n}\n\nexport abstract class SearchableCollection<T> implements Collectable<T>, Searchable<T> {\n  /**\n   * Constructor of Searchable Collection\n   * @param items Array of items\n   */\n  constructor(private items : T[]) { }\n\n  /**\n   * Method that adds an item on the array\n   * @param item An item of the items array\n   * @return The array with the added item\n   */\n  addItem(item: T) {\n    this.items.push(item);\n    return this.items;\n  }\n\n  /**\n   * Gets an item of the array with an specified index\n   * @param index Index of the Item I want to get\n   * @return The value of a specified index\n   */\n  getItem(index : number) {\n    return this.items[index];\n  }\n\n  /**\n   * Removes an item of the array with an specified index\n   * @param index Index of the item to be deleted\n   * @return The array with the removed item\n   */\n  removeItem(index : number): T[] {\n    this.items.splice(0, 1);\n    return this.items;\n  }\n\n  /**\n   * Gets the number of items on the array\n   * @return The lenght of the items array\n   */\n  getNumberOfItems() {\n    return this.items.length;\n  }\n\n  abstract search(searchTerm: T): T[] | undefined;\n}\n\nexport class NumericSearcheableCollection extends SearchableCollection<number> {\n  /**\n   * Constructor of NumericSearcheableCollection\n   * @param items A number Array of items\n   */\n  constructor(items : number[]) {\n    super(items);\n  }\n\n  /**\n   * This method searchs a number of coincidence with the search Term specified\n   * @param searchTerm A number to search on the array\n   * @return The array with the numbers found\n   */\n  search(searchTerm: number): number[] | undefined {\n    const result : number[] = [];\n    for (let i = 0; i < this.getNumberOfItems(); i++) {\n      if (this.getItem(i) === searchTerm) {\n        result.push(searchTerm);\n      }\n    }\n    return result;\n  }\n}\n\nexport class StringSearcheableCollection extends SearchableCollection<string> {\n  constructor(items : string[]) {\n    super(items);\n  }\n\n  /**\n   * This method searchs a number of coincidence with the search Term specified\n   * @param searchTerm A string or substring to search on the array\n   * @return The array with the string or substring found\n   */\n  search(searchTerm: string): string[] | undefined {\n    const result : string[] = [];\n    for (let i = 0; i < this.getNumberOfItems(); i++) {\n      if (this.getItem(i).includes(searchTerm) === true) {\n        result.push(searchTerm);\n      }\n    }\n    return result;\n  }\n}\n\nconst numericCollection = new NumericSearcheableCollection([1, 2, 1, 3, 4]);\nconst stringCollection = new StringSearcheableCollection(['hola', 'hola', 'adios']);\n\n// console.log(numericCollection.addItem(1));\n// console.log(numericCollection.getItem(1));\n\n// console.log(stringCollection.addItem('hola'));\n// console.log(stringCollection.getItem(2));\nconsole.log(numericCollection.removeItem(0));\n\nconsole.log(numericCollection.search(1));\nconsole.log(stringCollection.search('ola'));\n\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d42ebef9bc414c57a37ff1284bb8dd345e7a584d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_106lgrxepf=function(){return actualCoverage;};}return actualCoverage;}cov_106lgrxepf();cov_106lgrxepf().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_106lgrxepf().s[1]++;exports.StringSearcheableCollection=exports.NumericSearcheableCollection=exports.SearchableCollection=void 0;class SearchableCollection{/**
     * Constructor of Searchable Collection
     * @param items Array of items
     */constructor(items){cov_106lgrxepf().f[0]++;cov_106lgrxepf().s[2]++;this.items=items;}/**
     * Method that adds an item on the array
     * @param item An item of the items array
     * @return The array with the added item
     */addItem(item){cov_106lgrxepf().f[1]++;cov_106lgrxepf().s[3]++;this.items.push(item);cov_106lgrxepf().s[4]++;return this.items;}/**
     * Gets an item of the array with an specified index
     * @param index Index of the Item I want to get
     * @return The value of a specified index
     */getItem(index){cov_106lgrxepf().f[2]++;cov_106lgrxepf().s[5]++;return this.items[index];}/**
     * Removes an item of the array with an specified index
     * @param index Index of the item to be deleted
     * @return The array with the removed item
     */removeItem(index){cov_106lgrxepf().f[3]++;cov_106lgrxepf().s[6]++;this.items.splice(0,1);cov_106lgrxepf().s[7]++;return this.items;}/**
     * Gets the number of items on the array
     * @return The lenght of the items array
     */getNumberOfItems(){cov_106lgrxepf().f[4]++;cov_106lgrxepf().s[8]++;return this.items.length;}}cov_106lgrxepf().s[9]++;exports.SearchableCollection=SearchableCollection;class NumericSearcheableCollection extends SearchableCollection{/**
     * Constructor of NumericSearcheableCollection
     * @param items A number Array of items
     */constructor(items){cov_106lgrxepf().f[5]++;cov_106lgrxepf().s[10]++;super(items);}/**
     * This method searchs a number of coincidence with the search Term specified
     * @param searchTerm A number to search on the array
     * @return The array with the numbers found
     */search(searchTerm){cov_106lgrxepf().f[6]++;const result=(cov_106lgrxepf().s[11]++,[]);cov_106lgrxepf().s[12]++;for(let i=(cov_106lgrxepf().s[13]++,0);i<this.getNumberOfItems();i++){cov_106lgrxepf().s[14]++;if(this.getItem(i)===searchTerm){cov_106lgrxepf().b[0][0]++;cov_106lgrxepf().s[15]++;result.push(searchTerm);}else{cov_106lgrxepf().b[0][1]++;}}cov_106lgrxepf().s[16]++;return result;}}cov_106lgrxepf().s[17]++;exports.NumericSearcheableCollection=NumericSearcheableCollection;class StringSearcheableCollection extends SearchableCollection{constructor(items){cov_106lgrxepf().f[7]++;cov_106lgrxepf().s[18]++;super(items);}/**
     * This method searchs a number of coincidence with the search Term specified
     * @param searchTerm A string or substring to search on the array
     * @return The array with the string or substring found
     */search(searchTerm){cov_106lgrxepf().f[8]++;const result=(cov_106lgrxepf().s[19]++,[]);cov_106lgrxepf().s[20]++;for(let i=(cov_106lgrxepf().s[21]++,0);i<this.getNumberOfItems();i++){cov_106lgrxepf().s[22]++;if(this.getItem(i).includes(searchTerm)===true){cov_106lgrxepf().b[1][0]++;cov_106lgrxepf().s[23]++;result.push(searchTerm);}else{cov_106lgrxepf().b[1][1]++;}}cov_106lgrxepf().s[24]++;return result;}}cov_106lgrxepf().s[25]++;exports.StringSearcheableCollection=StringSearcheableCollection;const numericCollection=(cov_106lgrxepf().s[26]++,new NumericSearcheableCollection([1,2,1,3,4]));const stringCollection=(cov_106lgrxepf().s[27]++,new StringSearcheableCollection(['hola','hola','adios']));// console.log(numericCollection.addItem(1));
// console.log(numericCollection.getItem(1));
// console.log(stringCollection.addItem('hola'));
// console.log(stringCollection.getItem(2));
cov_106lgrxepf().s[28]++;console.log(numericCollection.removeItem(0));cov_106lgrxepf().s[29]++;console.log(numericCollection.search(1));cov_106lgrxepf().s[30]++;console.log(stringCollection.search('ola'));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby91bGwtZXNpdC1pbmYtZHNpLTIxLTIyLXByY3QwNi1nZW5lcmljcy1zb2xpZC1QYWJsbzQwMC9jb2RlLXByMDYvc3JjL2VqZXJjaWNpby1QRTEwMS50cyIsInNvdXJjZXMiOlsiL2hvbWUvdXN1YXJpby91bGwtZXNpdC1pbmYtZHNpLTIxLTIyLXByY3QwNi1nZW5lcmljcy1zb2xpZC1QYWJsbzQwMC9jb2RlLXByMDYvc3JjL2VqZXJjaWNpby1QRTEwMS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsZ0NBQWdDO0FBQ2hDLGtDQUFrQztBQUNsQyw0QkFBNEI7OztBQWE1QixNQUFzQixvQkFBb0I7SUFDeEM7OztPQUdHO0lBQ0gsWUFBb0IsS0FBVztRQUFYLFVBQUssR0FBTCxLQUFLLENBQU07SUFBSSxDQUFDO0lBRXBDOzs7O09BSUc7SUFDSCxPQUFPLENBQUMsSUFBTztRQUNiLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE9BQU8sQ0FBQyxLQUFjO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFVBQVUsQ0FBQyxLQUFjO1FBQ3ZCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVEOzs7T0FHRztJQUNILGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDM0IsQ0FBQztDQUdGO0FBN0NELG9EQTZDQztBQUVELE1BQWEsNEJBQTZCLFNBQVEsb0JBQTRCO0lBQzVFOzs7T0FHRztJQUNILFlBQVksS0FBZ0I7UUFDMUIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsVUFBa0I7UUFDdkIsTUFBTSxNQUFNLEdBQWMsRUFBRSxDQUFDO1FBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNoRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssVUFBVSxFQUFFO2dCQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0Y7QUF2QkQsb0VBdUJDO0FBRUQsTUFBYSwyQkFBNEIsU0FBUSxvQkFBNEI7SUFDM0UsWUFBWSxLQUFnQjtRQUMxQixLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDZixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxVQUFrQjtRQUN2QixNQUFNLE1BQU0sR0FBYyxFQUFFLENBQUM7UUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2hELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLEtBQUssSUFBSSxFQUFFO2dCQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0Y7QUFuQkQsa0VBbUJDO0FBRUQsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLDRCQUE0QixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUUsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLDJCQUEyQixDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBRXBGLDZDQUE2QztBQUM3Qyw2Q0FBNkM7QUFFN0MsaURBQWlEO0FBQ2pELDRDQUE0QztBQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRTdDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHZhbGlkLWpzZG9jICovXG4vKiBlc2xpbnQtZGlzYWJsZSByZXF1aXJlLWpzZG9jICovXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cbmludGVyZmFjZSBDb2xsZWN0YWJsZTxUPiB7XG4gIGFkZEl0ZW0oaXRlbSA6IFQpIDogdm9pZDtcbiAgZ2V0SXRlbShpdGVtIDogbnVtYmVyKSA6IFQ7XG4gIHJlbW92ZUl0ZW0oaW5kZXggOiBudW1iZXIpIDogVFtdO1xuICBnZXROdW1iZXJPZkl0ZW1zKCkgOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBTZWFyY2hhYmxlPFQ+IHtcbiAgc2VhcmNoKHNlYXJjaFRlcm0gOiBUKSA6IFRbXSB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFNlYXJjaGFibGVDb2xsZWN0aW9uPFQ+IGltcGxlbWVudHMgQ29sbGVjdGFibGU8VD4sIFNlYXJjaGFibGU8VD4ge1xuICAvKipcbiAgICogQ29uc3RydWN0b3Igb2YgU2VhcmNoYWJsZSBDb2xsZWN0aW9uXG4gICAqIEBwYXJhbSBpdGVtcyBBcnJheSBvZiBpdGVtc1xuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpdGVtcyA6IFRbXSkgeyB9XG5cbiAgLyoqXG4gICAqIE1ldGhvZCB0aGF0IGFkZHMgYW4gaXRlbSBvbiB0aGUgYXJyYXlcbiAgICogQHBhcmFtIGl0ZW0gQW4gaXRlbSBvZiB0aGUgaXRlbXMgYXJyYXlcbiAgICogQHJldHVybiBUaGUgYXJyYXkgd2l0aCB0aGUgYWRkZWQgaXRlbVxuICAgKi9cbiAgYWRkSXRlbShpdGVtOiBUKSB7XG4gICAgdGhpcy5pdGVtcy5wdXNoKGl0ZW0pO1xuICAgIHJldHVybiB0aGlzLml0ZW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgYW4gaXRlbSBvZiB0aGUgYXJyYXkgd2l0aCBhbiBzcGVjaWZpZWQgaW5kZXhcbiAgICogQHBhcmFtIGluZGV4IEluZGV4IG9mIHRoZSBJdGVtIEkgd2FudCB0byBnZXRcbiAgICogQHJldHVybiBUaGUgdmFsdWUgb2YgYSBzcGVjaWZpZWQgaW5kZXhcbiAgICovXG4gIGdldEl0ZW0oaW5kZXggOiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtc1tpbmRleF07XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbiBpdGVtIG9mIHRoZSBhcnJheSB3aXRoIGFuIHNwZWNpZmllZCBpbmRleFxuICAgKiBAcGFyYW0gaW5kZXggSW5kZXggb2YgdGhlIGl0ZW0gdG8gYmUgZGVsZXRlZFxuICAgKiBAcmV0dXJuIFRoZSBhcnJheSB3aXRoIHRoZSByZW1vdmVkIGl0ZW1cbiAgICovXG4gIHJlbW92ZUl0ZW0oaW5kZXggOiBudW1iZXIpOiBUW10ge1xuICAgIHRoaXMuaXRlbXMuc3BsaWNlKDAsIDEpO1xuICAgIHJldHVybiB0aGlzLml0ZW1zO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIG51bWJlciBvZiBpdGVtcyBvbiB0aGUgYXJyYXlcbiAgICogQHJldHVybiBUaGUgbGVuZ2h0IG9mIHRoZSBpdGVtcyBhcnJheVxuICAgKi9cbiAgZ2V0TnVtYmVyT2ZJdGVtcygpIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGg7XG4gIH1cblxuICBhYnN0cmFjdCBzZWFyY2goc2VhcmNoVGVybTogVCk6IFRbXSB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGNsYXNzIE51bWVyaWNTZWFyY2hlYWJsZUNvbGxlY3Rpb24gZXh0ZW5kcyBTZWFyY2hhYmxlQ29sbGVjdGlvbjxudW1iZXI+IHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIG9mIE51bWVyaWNTZWFyY2hlYWJsZUNvbGxlY3Rpb25cbiAgICogQHBhcmFtIGl0ZW1zIEEgbnVtYmVyIEFycmF5IG9mIGl0ZW1zXG4gICAqL1xuICBjb25zdHJ1Y3RvcihpdGVtcyA6IG51bWJlcltdKSB7XG4gICAgc3VwZXIoaXRlbXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgbWV0aG9kIHNlYXJjaHMgYSBudW1iZXIgb2YgY29pbmNpZGVuY2Ugd2l0aCB0aGUgc2VhcmNoIFRlcm0gc3BlY2lmaWVkXG4gICAqIEBwYXJhbSBzZWFyY2hUZXJtIEEgbnVtYmVyIHRvIHNlYXJjaCBvbiB0aGUgYXJyYXlcbiAgICogQHJldHVybiBUaGUgYXJyYXkgd2l0aCB0aGUgbnVtYmVycyBmb3VuZFxuICAgKi9cbiAgc2VhcmNoKHNlYXJjaFRlcm06IG51bWJlcik6IG51bWJlcltdIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCByZXN1bHQgOiBudW1iZXJbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5nZXROdW1iZXJPZkl0ZW1zKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuZ2V0SXRlbShpKSA9PT0gc2VhcmNoVGVybSkge1xuICAgICAgICByZXN1bHQucHVzaChzZWFyY2hUZXJtKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RyaW5nU2VhcmNoZWFibGVDb2xsZWN0aW9uIGV4dGVuZHMgU2VhcmNoYWJsZUNvbGxlY3Rpb248c3RyaW5nPiB7XG4gIGNvbnN0cnVjdG9yKGl0ZW1zIDogc3RyaW5nW10pIHtcbiAgICBzdXBlcihpdGVtcyk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2Qgc2VhcmNocyBhIG51bWJlciBvZiBjb2luY2lkZW5jZSB3aXRoIHRoZSBzZWFyY2ggVGVybSBzcGVjaWZpZWRcbiAgICogQHBhcmFtIHNlYXJjaFRlcm0gQSBzdHJpbmcgb3Igc3Vic3RyaW5nIHRvIHNlYXJjaCBvbiB0aGUgYXJyYXlcbiAgICogQHJldHVybiBUaGUgYXJyYXkgd2l0aCB0aGUgc3RyaW5nIG9yIHN1YnN0cmluZyBmb3VuZFxuICAgKi9cbiAgc2VhcmNoKHNlYXJjaFRlcm06IHN0cmluZyk6IHN0cmluZ1tdIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCByZXN1bHQgOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5nZXROdW1iZXJPZkl0ZW1zKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuZ2V0SXRlbShpKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXN1bHQucHVzaChzZWFyY2hUZXJtKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuXG5jb25zdCBudW1lcmljQ29sbGVjdGlvbiA9IG5ldyBOdW1lcmljU2VhcmNoZWFibGVDb2xsZWN0aW9uKFsxLCAyLCAxLCAzLCA0XSk7XG5jb25zdCBzdHJpbmdDb2xsZWN0aW9uID0gbmV3IFN0cmluZ1NlYXJjaGVhYmxlQ29sbGVjdGlvbihbJ2hvbGEnLCAnaG9sYScsICdhZGlvcyddKTtcblxuLy8gY29uc29sZS5sb2cobnVtZXJpY0NvbGxlY3Rpb24uYWRkSXRlbSgxKSk7XG4vLyBjb25zb2xlLmxvZyhudW1lcmljQ29sbGVjdGlvbi5nZXRJdGVtKDEpKTtcblxuLy8gY29uc29sZS5sb2coc3RyaW5nQ29sbGVjdGlvbi5hZGRJdGVtKCdob2xhJykpO1xuLy8gY29uc29sZS5sb2coc3RyaW5nQ29sbGVjdGlvbi5nZXRJdGVtKDIpKTtcbmNvbnNvbGUubG9nKG51bWVyaWNDb2xsZWN0aW9uLnJlbW92ZUl0ZW0oMCkpO1xuXG5jb25zb2xlLmxvZyhudW1lcmljQ29sbGVjdGlvbi5zZWFyY2goMSkpO1xuY29uc29sZS5sb2coc3RyaW5nQ29sbGVjdGlvbi5zZWFyY2goJ29sYScpKTtcblxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c3RydWN0b3IiLCJpdGVtcyIsImFkZEl0ZW0iLCJpdGVtIiwicHVzaCIsImdldEl0ZW0iLCJpbmRleCIsInJlbW92ZUl0ZW0iLCJzcGxpY2UiLCJnZXROdW1iZXJPZkl0ZW1zIiwibGVuZ3RoIiwiZXhwb3J0cyIsIk51bWVyaWNTZWFyY2hlYWJsZUNvbGxlY3Rpb24iLCJzZWFyY2giLCJzZWFyY2hUZXJtIiwicmVzdWx0IiwiaSIsIlN0cmluZ1NlYXJjaGVhYmxlQ29sbGVjdGlvbiIsImluY2x1ZGVzIiwibnVtZXJpY0NvbGxlY3Rpb24iLCJzdHJpbmdDb2xsZWN0aW9uIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vdWxsLWVzaXQtaW5mLWRzaS0yMS0yMi1wcmN0MDYtZ2VuZXJpY3Mtc29saWQtUGFibG80MDAvY29kZS1wcjA2L3NyYy9lamVyY2ljaW8tUEUxMDEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgdmFsaWQtanNkb2MgKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlcXVpcmUtanNkb2MgKi9cbi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cblxuaW50ZXJmYWNlIENvbGxlY3RhYmxlPFQ+IHtcbiAgYWRkSXRlbShpdGVtIDogVCkgOiB2b2lkO1xuICBnZXRJdGVtKGl0ZW0gOiBudW1iZXIpIDogVDtcbiAgcmVtb3ZlSXRlbShpbmRleCA6IG51bWJlcikgOiBUW107XG4gIGdldE51bWJlck9mSXRlbXMoKSA6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFNlYXJjaGFibGU8VD4ge1xuICBzZWFyY2goc2VhcmNoVGVybSA6IFQpIDogVFtdIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgU2VhcmNoYWJsZUNvbGxlY3Rpb248VD4gaW1wbGVtZW50cyBDb2xsZWN0YWJsZTxUPiwgU2VhcmNoYWJsZTxUPiB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RvciBvZiBTZWFyY2hhYmxlIENvbGxlY3Rpb25cbiAgICogQHBhcmFtIGl0ZW1zIEFycmF5IG9mIGl0ZW1zXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGl0ZW1zIDogVFtdKSB7IH1cblxuICAvKipcbiAgICogTWV0aG9kIHRoYXQgYWRkcyBhbiBpdGVtIG9uIHRoZSBhcnJheVxuICAgKiBAcGFyYW0gaXRlbSBBbiBpdGVtIG9mIHRoZSBpdGVtcyBhcnJheVxuICAgKiBAcmV0dXJuIFRoZSBhcnJheSB3aXRoIHRoZSBhZGRlZCBpdGVtXG4gICAqL1xuICBhZGRJdGVtKGl0ZW06IFQpIHtcbiAgICB0aGlzLml0ZW1zLnB1c2goaXRlbSk7XG4gICAgcmV0dXJuIHRoaXMuaXRlbXM7XG4gIH1cblxuICAvKipcbiAgICogR2V0cyBhbiBpdGVtIG9mIHRoZSBhcnJheSB3aXRoIGFuIHNwZWNpZmllZCBpbmRleFxuICAgKiBAcGFyYW0gaW5kZXggSW5kZXggb2YgdGhlIEl0ZW0gSSB3YW50IHRvIGdldFxuICAgKiBAcmV0dXJuIFRoZSB2YWx1ZSBvZiBhIHNwZWNpZmllZCBpbmRleFxuICAgKi9cbiAgZ2V0SXRlbShpbmRleCA6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLml0ZW1zW2luZGV4XTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGFuIGl0ZW0gb2YgdGhlIGFycmF5IHdpdGggYW4gc3BlY2lmaWVkIGluZGV4XG4gICAqIEBwYXJhbSBpbmRleCBJbmRleCBvZiB0aGUgaXRlbSB0byBiZSBkZWxldGVkXG4gICAqIEByZXR1cm4gVGhlIGFycmF5IHdpdGggdGhlIHJlbW92ZWQgaXRlbVxuICAgKi9cbiAgcmVtb3ZlSXRlbShpbmRleCA6IG51bWJlcik6IFRbXSB7XG4gICAgdGhpcy5pdGVtcy5zcGxpY2UoMCwgMSk7XG4gICAgcmV0dXJuIHRoaXMuaXRlbXM7XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgbnVtYmVyIG9mIGl0ZW1zIG9uIHRoZSBhcnJheVxuICAgKiBAcmV0dXJuIFRoZSBsZW5naHQgb2YgdGhlIGl0ZW1zIGFycmF5XG4gICAqL1xuICBnZXROdW1iZXJPZkl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLml0ZW1zLmxlbmd0aDtcbiAgfVxuXG4gIGFic3RyYWN0IHNlYXJjaChzZWFyY2hUZXJtOiBUKTogVFtdIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY2xhc3MgTnVtZXJpY1NlYXJjaGVhYmxlQ29sbGVjdGlvbiBleHRlbmRzIFNlYXJjaGFibGVDb2xsZWN0aW9uPG51bWJlcj4ge1xuICAvKipcbiAgICogQ29uc3RydWN0b3Igb2YgTnVtZXJpY1NlYXJjaGVhYmxlQ29sbGVjdGlvblxuICAgKiBAcGFyYW0gaXRlbXMgQSBudW1iZXIgQXJyYXkgb2YgaXRlbXNcbiAgICovXG4gIGNvbnN0cnVjdG9yKGl0ZW1zIDogbnVtYmVyW10pIHtcbiAgICBzdXBlcihpdGVtcyk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2Qgc2VhcmNocyBhIG51bWJlciBvZiBjb2luY2lkZW5jZSB3aXRoIHRoZSBzZWFyY2ggVGVybSBzcGVjaWZpZWRcbiAgICogQHBhcmFtIHNlYXJjaFRlcm0gQSBudW1iZXIgdG8gc2VhcmNoIG9uIHRoZSBhcnJheVxuICAgKiBAcmV0dXJuIFRoZSBhcnJheSB3aXRoIHRoZSBudW1iZXJzIGZvdW5kXG4gICAqL1xuICBzZWFyY2goc2VhcmNoVGVybTogbnVtYmVyKTogbnVtYmVyW10gfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IHJlc3VsdCA6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmdldE51bWJlck9mSXRlbXMoKTsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5nZXRJdGVtKGkpID09PSBzZWFyY2hUZXJtKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHNlYXJjaFRlcm0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTdHJpbmdTZWFyY2hlYWJsZUNvbGxlY3Rpb24gZXh0ZW5kcyBTZWFyY2hhYmxlQ29sbGVjdGlvbjxzdHJpbmc+IHtcbiAgY29uc3RydWN0b3IoaXRlbXMgOiBzdHJpbmdbXSkge1xuICAgIHN1cGVyKGl0ZW1zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCBzZWFyY2hzIGEgbnVtYmVyIG9mIGNvaW5jaWRlbmNlIHdpdGggdGhlIHNlYXJjaCBUZXJtIHNwZWNpZmllZFxuICAgKiBAcGFyYW0gc2VhcmNoVGVybSBBIHN0cmluZyBvciBzdWJzdHJpbmcgdG8gc2VhcmNoIG9uIHRoZSBhcnJheVxuICAgKiBAcmV0dXJuIFRoZSBhcnJheSB3aXRoIHRoZSBzdHJpbmcgb3Igc3Vic3RyaW5nIGZvdW5kXG4gICAqL1xuICBzZWFyY2goc2VhcmNoVGVybTogc3RyaW5nKTogc3RyaW5nW10gfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IHJlc3VsdCA6IHN0cmluZ1tdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmdldE51bWJlck9mSXRlbXMoKTsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5nZXRJdGVtKGkpLmluY2x1ZGVzKHNlYXJjaFRlcm0pID09PSB0cnVlKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHNlYXJjaFRlcm0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5cbmNvbnN0IG51bWVyaWNDb2xsZWN0aW9uID0gbmV3IE51bWVyaWNTZWFyY2hlYWJsZUNvbGxlY3Rpb24oWzEsIDIsIDEsIDMsIDRdKTtcbmNvbnN0IHN0cmluZ0NvbGxlY3Rpb24gPSBuZXcgU3RyaW5nU2VhcmNoZWFibGVDb2xsZWN0aW9uKFsnaG9sYScsICdob2xhJywgJ2FkaW9zJ10pO1xuXG4vLyBjb25zb2xlLmxvZyhudW1lcmljQ29sbGVjdGlvbi5hZGRJdGVtKDEpKTtcbi8vIGNvbnNvbGUubG9nKG51bWVyaWNDb2xsZWN0aW9uLmdldEl0ZW0oMSkpO1xuXG4vLyBjb25zb2xlLmxvZyhzdHJpbmdDb2xsZWN0aW9uLmFkZEl0ZW0oJ2hvbGEnKSk7XG4vLyBjb25zb2xlLmxvZyhzdHJpbmdDb2xsZWN0aW9uLmdldEl0ZW0oMikpO1xuY29uc29sZS5sb2cobnVtZXJpY0NvbGxlY3Rpb24ucmVtb3ZlSXRlbSgwKSk7XG5cbmNvbnNvbGUubG9nKG51bWVyaWNDb2xsZWN0aW9uLnNlYXJjaCgxKSk7XG5jb25zb2xlLmxvZyhzdHJpbmdDb2xsZWN0aW9uLnNlYXJjaCgnb2xhJykpO1xuXG4iXX0=